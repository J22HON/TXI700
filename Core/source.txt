

#include "main.h"

extern struct KEY Key;

void Input_Number(void)
{ 
   unsigned char              num_count=0, 
                                   change=0,
                                   i=0,
			 Data[12],
                                   toggle=0,
                                   first_toggle=0;

   extern unsigned char      v_car_id[12];	

  while(1)
  {
     KEYPAD_Scan();
     
      if(num_count > 10) { bbik(); Key_Clear(); HAL_Delay(100); num_count--;}
		
     if(change)
     {
	if(Key.PressFlg[1]) 
	{
	  Key.PressFlg[1]=0;
             if(read_key!= 1 && first_toggle = 1;) { toggle = 0; num_count++; } 
             else if(!first_toggle) { first_toggle = 1; toggle = 0;}
 
             if(!toggle) { Data[num_count] = '.'; toggle = 1;}
             else if(toggle==1) { Data[num_count] = '-'; toggle = 0;}  
             read_key = 1;
	}
           else if(Key.PressFlg[2]) 
	{
	  Key.PressFlg[2]=0;
             if(read_key!= 2 && first_toggle = 1;) { toggle = 0; num_count++; } 
             else if(!first_toggle) { first_toggle = 1; toggle = 0;}
 
             if(!toggle) { Data[num_count] = 'A'; toggle = 1;}
             else if(toggle==1) { Data[num_count] = 'B'; toggle = 2;}  
             else if(toggle==2) { Data[num_count] = 'C'; toggle = 0;}  
             read_key = 2;
	}
           else if(Key.PressFlg[3]) 
	{
	  Key.PressFlg[3]=0;
             if(read_key!= 3 && first_toggle = 1;) { toggle = 0; num_count++; } 
             else if(!first_toggle) { first_toggle = 1; toggle = 0;}
 
             if(!toggle) { Data[num_count] = 'D'; toggle = 1;}
             else if(toggle==1) { Data[num_count] = 'E'; toggle = 2;}  
             else if(toggle==2) { Data[num_count] = 'F'; toggle = 0;}  
             read_key = 3;
	}
     }	
     else if(!chage)
     {        
               if(Key.PressFlg[0])      { Key.PressFlg[0]=0; Data[num_count] = 0; num_count++; }
         else if(Key.PressFlg[1])      { Key.PressFlg[1]=0; Data[num_count] = 1; num_count++; }		
         else if(Key.PressFlg[2])      { Key.PressFlg[2]=0; Data[num_count] = 2; num_count++; }
         else if(Key.PressFlg[3])      { Key.PressFlg[3]=0; Data[num_count] = 3; num_count++; }
         else if(Key.PressFlg[4])      { Key.PressFlg[4]=0; Data[num_count] = 4; num_count++; }
         else if(Key.PressFlg[5])      { Key.PressFlg[5]=0; Data[num_count] = 5; num_count++; }
         else if(Key.PressFlg[6])      { Key.PressFlg[6]=0; Data[num_count] = 6; num_count++; }
         else if(Key.PressFlg[7])      { Key.PressFlg[7]=0; Data[num_count] = 7; num_count++; }
         else if(Key.PressFlg[8])      { Key.PressFlg[8]=0; Data[num_count] = 8; num_count++; }
         else if(Key.PressFlg[9])      { Key.PressFlg[9]=0; Data[num_count] = 9; num_count++; }
         else if(Key.PressFlg[10]     { Key.PressFlg[10]=0; if(chage) chage = 0; else change = 1; }
         else if(Key.PressFlg[11]     { Key.PressFlg[11]=0; if(!num_count)bbic();  else num_count--; }
         else if(Key.PressFlg[12]     { Key.PressFlg[12]=0; car_id[num_count] = ' '; num_count++; }  
         else if(Key.PressFlg[13]     
         { 
            Key.PressFlg[13]=0; 
            for(i=0; i<10; i++) v_car_id[i] = Data[i];	
 	 v_car_id[i] = Data[i];	
            break;    
         }   
     }
     
     if(!change) // mprint 부분마다 1개씩 --시 Clear_Screen();
     {
            if(!num_count)     mprintf(1, 4, "                              ");
      else if(num_count==1) mprintf(1, 4, "   %d                         ", Data[0);
      else if(num_count==2) mprintf(1, 4, "   %d%d                       ", Data[0],Data[1]);
      else if(num_count==3) mprintf(1, 4, "   %d%d%d                     ", Data[0],Data[1],Data[2]);
      else if(num_count==4) mprintf(1, 4, "   %d%d%d%d                   ", Data[0],Data[1],Data[2],Data[3]);
      else if(num_count==5) mprintf(1, 4, "   %d%d%d%d%d                 ", Data[0],Data[1],Data[2],Data[3],Data[4]);
      else if(num_count==6) mprintf(1, 4, "   %d%d%d%d%d%d               ", Data[0],Data[1],Data[2],Data[3],Data[4],Data[5]);
      else if(num_count==7) mprintf(1, 4, "   %d%d%d%d%d%d%d             ", Data[0],Data[1],Data[2],Data[3],Data[4],Data[5],Data[6]);
      else if(num_count==8) mprintf(1, 4, "   %d%d%d%d%d%d%d%d           ", Data[0],Data[1],Data[2],Data[3],Data[4],Data[5],Data[6],Data[7]);
      else if(num_count==9) mprintf(1, 4, "   %d%d%d%d%d%d%d%d%d         ", Data[0],Data[1],Data[2],Data[3],Data[4],Data[5],Data[6],Data[7],Data[8]);
      else if(num_count==10) mprintf(1, 4, "   %d%d%d%d%d%d%d%d%d%d       ", Data[0],Data[1],Data[2],Data[3],Data[4],Data[5],Data[6],Data[7],Data[8],Data[9]);
     }
  }
]